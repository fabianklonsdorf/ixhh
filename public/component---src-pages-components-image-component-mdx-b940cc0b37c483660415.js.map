{"version":3,"sources":["webpack:///./src/pages/components/ImageComponent.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","_extends","mdxType","isMDXComponent","PageHeader","_cx","children","title","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","className","cx","PageHeader_module","length","id","text","PropTypes","node","string","components_PageHeader","PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","href","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","array","components_PageTabs","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","data","site","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-components-image-component-mdx-b940cc0b37c483660415.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/fabian/Desktop/my-carbon-site/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    {\n      /*\n      ## ImageComponent\n      <ImageComponent caption=\"Don’t use complex future tenses when simple ones will suffice. Don’t use complex future tenses when simple ones will suffice. Don’t use complex future tenses when simple ones will suffice.\">\n      ![blossom](../../images/blossom.jpg)\n      </ImageComponent>\n      <Row>\n       <Column colLg={4}>\n      <ImageComponent caption=\"Don’t use complex future tenses when simple ones will suffice. Don’t use complex future tenses when simple ones will suffice. Don’t use complex future tenses when simple ones will suffice.\">\n      ![blossom](../../images/blossom.jpg)\n      </ImageComponent>\n       </Column>\n      </Row>\n      <Row>\n       <Column colLg={6}>\n      <ImageComponent caption=\"Don’t use complex future tenses when simple ones will suffice. Don’t use complex future tenses when simple ones will suffice. Don’t use complex future tenses when simple ones will suffice.\">\n      ![blossom](../../images/blossom.jpg)\n      </ImageComponent>\n       </Column>\n      </Row>\n      <Row>\n       <Column colLg={8}>\n      <ImageComponent caption=\"Don’t use complex future tenses when simple ones will suffice. Don’t use complex future tenses when simple ones will suffice. Don’t use complex future tenses when simple ones will suffice.\">\n      ![blossom](../../images/blossom.jpg)\n      </ImageComponent>\n       </Column>\n      </Row>\n      ### Zoom\n      Zoom styles are in progress/TBD\n      <ImageComponent zoom caption=\"Don’t use complex future tenses when simple ones will suffice. Don’t use complex future tenses when simple ones will suffice. Don’t use complex future tenses when simple ones will suffice.\">\n      ![blossom](../../images/blossom.jpg)\n      </ImageComponent>\n      */\n    }\n\n    </MDXLayout>;\n}\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\n// import EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {} } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>{children}</Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}